// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc348.RecycleRushForklift.subsystems;

import org.usfirst.frc348.RecycleRushForklift.RobotMap;
import org.usfirst.frc348.RecycleRushForklift.commands.*;
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DrivePlatform extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogInput ultrasonicRangeSensorForward = RobotMap.drivePlatformUltrasonicRangeSensorForward;
    DigitalInput totePositionSensorLeft = RobotMap.drivePlatformTotePositionSensorLeft;
    DigitalInput totePositionSensorRight = RobotMap.drivePlatformTotePositionSensorRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    RobotDrive driveSystem = RobotMap.driveSystem;
    PowerDistributionPanel powerPanel = RobotMap.powerPanel;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ManualDriveCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void mecanumDrive(double velX, double velY, double velTheta)
    {
    	driveSystem.mecanumDrive_Cartesian(velX, velY, velTheta, 0);
    }
    
    public double getCurrent(int channel)
    {
    	return powerPanel.getCurrent(channel);
    }
}

